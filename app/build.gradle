apply plugin: 'com.android.application'
apply plugin: 'jacoco-android'

android {
    compileSdkVersion 28

    dexOptions {
        jumboMode = true
        javaMaxHeapSize "4g"
    }

    packagingOptions {
        exclude 'proguard-project.txt'
        exclude 'project.properties'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/DEPENDENCIES.txt'
        exclude 'META-INF/DEPENDENCIES'
    }

    defaultConfig {
        applicationId "com.amaze.filemanager"
        minSdkVersion 21
        targetSdkVersion 28
        versionCode 89
        versionName "3.5.2"
        multiDexEnabled true

        vectorDrawables.useSupportLibrary = true
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    signingConfigs {
        release
        config
    }

    buildTypes {
        debug {
            applicationIdSuffix ".debug"
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard.cfg'
            testProguardFile 'tests-proguard.cfg'
        }

        release {
            signingConfig signingConfigs.release

            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard.cfg'
        }
    }

    lintOptions {
        abortOnError false
    }

    flavorDimensions 'static'

    productFlavors {
        fdroid {
            dimension 'static'
            buildConfigField "boolean", "IS_VERSION_FDROID", "true"
        }

        play {
            dimension 'static'
            buildConfigField "boolean", "IS_VERSION_FDROID", "false"
            signingConfig signingConfigs.config
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    testOptions {
        unitTests {
            includeAndroidResources = true
            returnDefaultValues = true
        }
    }
}
repositories {
    maven {
        url "https://software.mobile.pendo.io/artifactory/android-sdk-externals"
    }
    maven {
        url "https://software.mobile.pendo.io/artifactory/android-release"
    }
    maven {
        url "https://software.mobile.pendo.io/artifactory/android-staging"
        credentials {
            username 'mobile-reader'
            password 'eyJ2ZXIiOiIyIiwidHlwIjoiSldUIiwiYWxnIjoiUlMyNTYiLCJraWQiOiJ5UUxQNjQ1UWkzemNwUy1QSTV5M3UyVHBsTmo0YVJmdV9MMUcwMHp0MlRRIn0.eyJzdWIiOiJqZnJ0QDAxZW50cHN5czZhZWJxMWt0anBkZWsxejljXC91c2Vyc1wvbW9iaWxlLXJlYWRlciIsInNjcCI6Im1lbWJlci1vZi1ncm91cHM6cmVhZGVycyBhcGk6KiIsImF1ZCI6ImpmcnRAMDFlbnRwc3lzNmFlYnExa3RqcGRlazF6OWMiLCJpc3MiOiJqZnJ0QDAxZW50cHN5czZhZWJxMWt0anBkZWsxejljXC91c2Vyc1wvbGlyYW5AcGVuZG8uaW8iLCJpYXQiOjE2MDYzMDAwNDcsImp0aSI6ImFmNDNkN2Q5LWNmZjMtNDFmNS05ZmVlLTRkMjA3M2FmNWViYSJ9.dct_1somtsTL7iKNyj3pDHzeByXqxyJ3KCghDiTGlxDqR9Gx_QKWX8ZqFtQAb83o6oIB3Jslva7enE5Okw4IquXl1-xTYCl-s_T1VGaYDK4TgAlab2TQ9T3pxle0sE5TJW5by9IffXx1nKhLCvtJR8tfcAgzAV_jNJNRcxSzJsc31Bo6wzbZE1ojEua_CoZ5yqC0Sk6TS8oaqxRFLixROZwmLog3hcpw5wra4NEQy1I5NEb_vRDTx2RPvmPqpxc639RRc9b9LadV6oXuYRvC72k2pxRWBLgcAv6KGH9y9sYw8D7kUo8aMfoWAQUUWka-AXx0-s0R5NI2HUN9_avUIg'
        }
    }
    mavenCentral()
}


ext {
    robolectricVersion = '4.3.1'
    glideVersion = '4.11.0'
    sshjVersion = '0.26.0'
    jcifsVersion = '2.1.3'
    fabSpeedDialVersion = '3.1.1'
    roomVersion = '2.2.5'
    bouncyCastleVersion = '1.65'
    awaitilityVersion = "3.1.6"
    androidXTestVersion = "1.2.0"
    junitVersion = "4.13"
    slf4jVersion = "1.7.25"
    mockitoVersion = "3.4.4"
    androidBillingVersion = "2.1.0"
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation 'com.readystatesoftware.systembartint:systembartint:1.0.3'
    implementation group:'sdk.pendo.io' , name:'pendoIO', version:'2.7.0.1181', changing:true
    implementation 'androidx.vectordrawable:vectordrawable-animated:1.1.0'
    implementation 'androidx.legacy:legacy-support-v13:1.0.0'
    implementation 'com.google.android.material:material:1.1.0'
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.palette:palette:1.0.0'
    implementation 'androidx.cardview:cardview:1.0.0'
    implementation "androidx.room:room-runtime:$roomVersion"
    implementation "com.android.billingclient:billing:$androidBillingVersion"
    annotationProcessor "androidx.room:room-compiler:$roomVersion"
    // RxJava support for Room
    implementation "androidx.room:room-rxjava2:$roomVersion"
    annotationProcessor 'androidx.annotation:annotation:1.1.0'

    //For tests
    testImplementation "junit:junit:$junitVersion"//tests the app logic
    testImplementation "org.robolectric:robolectric:$robolectricVersion"//tests android interaction
    testImplementation "org.robolectric:shadows-httpclient:$robolectricVersion"//tests android interaction
    testImplementation "androidx.test:core:$androidXTestVersion"
    testImplementation "androidx.test:runner:$androidXTestVersion"
    testImplementation "androidx.test:rules:$androidXTestVersion"
    testImplementation 'androidx.test.ext:junit:1.1.1'
    //testImplementation 'androidx.test.uiautomator:uiautomator:2.2.0'
    testImplementation "org.mockito:mockito-core:$mockitoVersion"
    testImplementation "org.apache.sshd:sshd-core:1.7.0"
    testImplementation "org.awaitility:awaitility:$awaitilityVersion"
    testImplementation 'org.jsoup:jsoup:1.11.2'
    testAnnotationProcessor "com.google.auto.service:auto-service:1.0-rc4"

    androidTestImplementation "junit:junit:$junitVersion"//tests the app logic
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
    androidTestImplementation "androidx.test:core:$androidXTestVersion"
    androidTestImplementation "androidx.test:runner:$androidXTestVersion"
    androidTestImplementation "androidx.test:rules:$androidXTestVersion"
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'commons-net:commons-net:3.6'
    androidTestImplementation "org.awaitility:awaitility:$awaitilityVersion"

    //Detect memory leaks
    debugImplementation 'com.squareup.leakcanary:leakcanary-android:1.5.3'
    releaseImplementation 'com.squareup.leakcanary:leakcanary-android-no-op:1.5.3'

    implementation 'org.apache.commons:commons-compress:1.18'

    implementation ('com.github.junrar:junrar:0.7') {
        exclude module: 'commons-logging'
        exclude module: 'commons-logging-api'
        exclude module: 'maven-scm-api'
        exclude module: 'maven-scm-provider-svnexe'
    }

    implementation 'com.afollestad.material-dialogs:core:0.9.6.0'
    implementation 'com.afollestad.material-dialogs:commons:0.9.6.0'

    // https://mvnrepository.com/artifact/org.apache.mina/mina-core

    implementation group: 'org.apache.mina', name: 'mina-core', version: '2.0.16'
    // https://mvnrepository.com/artifact/org.slf4j/slf4j-api
    implementation group: 'org.slf4j', name: 'slf4j-api', version: slf4jVersion
    // https://mvnrepository.com/artifact/org.slf4j/slf4j-simple
    implementation group: 'org.slf4j', name: 'slf4j-android', version: slf4jVersion
    // https://mvnrepository.com/artifact/org.slf4j/jcl-over-slf4j
    implementation group: 'org.slf4j', name: 'jcl-over-slf4j', version: slf4jVersion

    //implementation files('libs/ftplet-api-1.1.0-SNAPSHOT.jar')
    // https://mvnrepository.com/artifact/org.apache.ftpserver/ftplet-api
    implementation group: 'org.apache.ftpserver', name: 'ftplet-api', version: '1.1.0'

    //implementation files('libs/ftpserver-core-1.1.0-SNAPSHOT.jar')
    // https://mvnrepository.com/artifact/org.apache.ftpserver/ftpserver-core
    implementation group: 'org.apache.ftpserver', name: 'ftpserver-core', version: '1.1.0'

    implementation 'org.greenrobot:eventbus:3.1.1'

    implementation 'com.android.volley:volley:1.1.1'

    implementation 'eu.chainfire:libsuperuser:1.0.0.+'

    implementation 'com.cloudrail:cloudrail-si-android:2.22.4'

    implementation 'com.github.PhilJay:MPAndroidChart:v3.0.2'//Nice charts and graphs

    implementation 'com.github.npgall:concurrent-trees:2.6.1'//Concurrent tries

    //SFTP
    implementation "com.hierynomus:sshj:$sshjVersion"

    //smb
    implementation "eu.agno3.jcifs:jcifs-ng:$jcifsVersion"

    implementation "org.bouncycastle:bcpkix-jdk15on:$bouncyCastleVersion"
    implementation "org.bouncycastle:bcprov-jdk15on:$bouncyCastleVersion"

    //Glide: loads icons seemlessly
    implementation "com.github.bumptech.glide:glide:$glideVersion"
    implementation ("com.github.bumptech.glide:recyclerview-integration:$glideVersion") {
        // Excludes the support library because it's already included by Glide.
        transitive = false
    }
    annotationProcessor "com.github.bumptech.glide:compiler:$glideVersion"

    implementation "com.leinardi.android:speed-dial:$fabSpeedDialVersion"

    //Simple library show
    implementation('com.mikepenz:aboutlibraries:6.1.1@aar') {
        transitive = true
    }

    implementation 'androidx.multidex:multidex:2.0.1'//Multiple dex files
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'

    //zip4j: support password-protected zips
    implementation 'net.lingala.zip4j:zip4j:1.3.2'

    implementation 'org.tukaani:xz:1.8'

    implementation 'io.reactivex.rxjava2:rxandroid:2.1.1'
    // Because RxAndroid releases are few and far between, it is recommended you also
    // explicitly depend on RxJava's latest version for bug fixes and new features.
    // (see https://github.com/ReactiveX/RxJava/releases for latest 3.x.x version)
    implementation group: 'io.reactivex.rxjava2', name: 'rxjava', version: '2.1.1'

    implementation project(':commons_compress_7z')
}

configurations.all {
    resolutionStrategy {
        dependencySubstitution {
            substitute module("commons-logging:commons-logging-api:1.1") with module("commons-logging:commons-logging:1.1.1")
            substitute module("com.android.support:support-annotations:27.1.1") with module("com.android.support:support-annotations:27.0.2")
        }
    }
}

task supportOldLangCodes

[['id', 'in'], ['yi', 'ji'], ['he', 'iw']].forEach { sourceCode, destinationCode ->
    def copyTask = tasks.create('copyStrings' + sourceCode + 'Into' + destinationCode, Copy) {
        description('copying values-' + sourceCode + ' strings into values-' + destinationCode)
        from('src/main/res/values-' + sourceCode)
        into('src/main/res/values-' + destinationCode)
        include('strings.xml')
    }
    supportOldLangCodes.dependsOn copyTask
}

project.afterEvaluate {
    preBuild.dependsOn supportOldLangCodes
}

clean.dependsOn supportOldLangCodes
clean.mustRunAfter supportOldLangCodes

jacoco {
    toolVersion = "0.8.4"
}

tasks.withType(Test) {
    jacoco.includeNoLocationClasses = true
}


Properties props = new Properties()
def propFile = new File('signing.properties')

if (propFile.canRead()) {
    props.load(new FileInputStream(propFile))

    if (props != null &&
            props.containsKey('STORE_FILE') &&
            props.containsKey('STORE_PASSWORD') &&
            props.containsKey('KEY_ALIAS') &&
            props.containsKey('KEY_PASSWORD')) {
        android.signingConfigs.release.storeFile = file(props['STORE_FILE'])
        android.signingConfigs.release.storePassword = props['STORE_PASSWORD']
        android.signingConfigs.release.keyAlias = props['KEY_ALIAS']
        android.signingConfigs.release.keyPassword = props['KEY_PASSWORD']
    } else {
        println 'signing.properties found but some entries are missing'
        android.buildTypes.release.signingConfig = null
    }
} else {
    println 'signing.properties not found'
    android.buildTypes.release.signingConfig = null
}
